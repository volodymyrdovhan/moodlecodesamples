{"version":3,"sources":["../src/intellicart_repository.js"],"names":["define","Ajax","Notification","query","args","promise","call","methodname","fail","exception","countProducts","deleteItem","id"],"mappings":"AAwBAA,MAAM,CAAC,CAAC,WAAD,CAAc,mBAAd,CAAD,CAAqC,SAASC,CAAT,CAAeC,CAAf,CAA6B,CA+DpE,MAAO,CACHC,KAAK,CAzDG,QAARA,CAAAA,KAAQ,CAASC,CAAT,CAAe,IAOnBC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,4CADF,CAEVH,IAAI,CAAEA,CAFI,CAKU,CAAV,EAAqB,CAArB,CAPS,CASvBC,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CA4CM,CAEHK,aAAa,CAtCG,QAAhBA,CAAAA,aAAgB,CAASN,CAAT,CAAe,IAM3BC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,kDADF,CAEVH,IAAI,CAAEA,CAFI,CAKU,CAAV,EAAqB,CAArB,CANiB,CAQ/BC,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CAyBM,CAGHM,UAAU,CApBG,QAAbA,CAAAA,UAAa,CAASC,CAAT,CAAa,IAUtBP,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,8CADF,CAEVH,IAAI,CANG,CACPQ,EAAE,CAAEA,CADG,CAIG,CAKU,CAAV,EAAqB,CAArB,CAVY,CAY1BP,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CAEM,CAKV,CApEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Retrieves intellicart from the server.\n *\n * @module     local_intellicart/intellicart_repository\n * @class      intellicart_repository\n * @package    local_intellicart\n * @copyright  2018 SEBALE\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n    /**\n     * Retrieve a list of announcements from the server.\n     *\n     * @param {object} args The request arguments\n     * @return {object} jQuery promise\n     */\n    var query = function(args) {\n\n        var request = {\n            methodname: 'local_intellicart_get_intellicart_products',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    /**\n     * Get the number of products from the server.\n     *\n     * @param {object} args The request arguments\n     * @return {object} jQuery promise\n     */\n    var countProducts = function(args) {\n        var request = {\n            methodname: 'local_intellicart_get_intellicart_products_count',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    /**\n     * Delete product.\n     *\n     * @param {int} id The product id\n     * @return {object} jQuery promise\n     */\n    var deleteItem = function(id) {\n        var args = {\n            id: id\n        };\n\n        var request = {\n            methodname: 'local_intellicart_delete_intellicart_product',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    return {\n        query: query,\n        countProducts: countProducts,\n        deleteItem: deleteItem\n    };\n});\n"],"file":"intellicart_repository.min.js"}